#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MEMORY_SIZE 30000

// 解譯 Brainfuck 程式
void interpretBrainfuck(char *program, char *inputString, int startPos) {  // program = 指令
    char *memory = (char *)malloc(MEMORY_SIZE * sizeof(char));
    char * temp = program;
    for(int j = 0; j < startPos;j++){
        inputString++;
    }
    char *outputBuffer = (char *)malloc(1000 * sizeof(char));

    int outputIndex = 0;

    int i = 0;
    while (i < strlen(program)) {
        if (*temp == '>') {
            inputString++;
        } else if (*temp == '<') {
            inputString--;
        } else if (*temp == '+') {
            ++(*inputString);
        } else if (*temp == '-') {
            --(*inputString);
        } else if (*temp == '.') {
            printf("%c",*inputString);
        }
        i++;
        *temp++;
    }

}

int main() {
    int t;
    scanf("%d", &t); // 讀取測試組數

    while (t--) {
        char *inputString = (char *)malloc(1000 * sizeof(char));
        char *program = (char *)malloc(10000 * sizeof(char));
        int startPos;

        scanf("%s %d", inputString, &startPos); // 讀取輸入字串和初始位置
        getchar(); // 清除換行符

        fgets(program, 10000, stdin); // 讀取 Brainfuck 程式
        *(program + strcspn(program, "\n")) = '\0'; // 移除尾部的換行符

        interpretBrainfuck(program, inputString, startPos); // 解譯 Brainfuck 程式
        printf("\n"); // 輸出換行符，以便下一組測試

        // 釋放動態分配的記憶體
        free(inputString);
        free(program);
    }

    return 0;
}
